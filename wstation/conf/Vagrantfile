# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  
  config.vm.define :node1 do |node1|    
    node1.vm.provider "virtualbox" do |v|
        file_to_disk = './tmp/large_disk.vdi'
        v.memory = 1024
        v.cpus = 1
        v.gui=true
        v.customize ['modifyvm', :id, '--nicpromisc1', 'allow-all', '--nicpromisc2', 'allow-all', '--nicpromisc3', 'allow-all']
        #v.customize ["modifyhd", "disk id", "--resize", 60 * 1024]
    end
    #node1.vm.box = "ffuenf/ubuntu-17.10-server-amd64"
    node1.vm.box="bento/centos-7.3"
    #node1.vm.hostname = "#{ENV['USER']}-node1"
    node1.vm.hostname = "node1"
  #node1.vm.network "public_network", bridge: "eth0"
  #node1.vm.box_url = "http://cloud.centos.org/centos/7/vagrant/x86_64/images/CentOS-7-x86_64-Vagrant-1710_01.VirtualBox.box"
    node1.vm.network "private_network", ip: "10.10.0.11"
  #node1.vm.provision :shell, path: "cos7bootstrap.sh"
  #node1.vm.synced_folder "#{ENV['PWD']}/logs", "/vagrant/logs"
  #node1.vm.synced_folder "$HOSTNAME/logs", "/vagrant/logs"
  #node1.vm.synced_folder "/Applications/VirtualBox.app/Contents/MacOS", "/vagrant/vbox"
  #node1.vm.provision "file", source: "../data/trident-sensor_installer.centos-2.3.1.bin", destination: "/vagrant/trident-sensor_installer.centos-2.3.1.bin"
  #node1.vm.provision :shell, path: "install_trident.sh"
  end

  config.vm.define :node2 do |node2|    
    node2.vm.provider "virtualbox" do |v|
        file_to_disk = './tmp/large_disk.vdi'
        v.memory = 1024
        v.cpus = 1
        v.gui=true
        v.customize ['modifyvm', :id, '--nicpromisc1', 'allow-all', '--nicpromisc2', 'allow-all', '--nicpromisc3', 'allow-all']
        #v.customize ["modifyhd", "disk id", "--resize", 60 * 1024]
    end
    node2.vm.box="bento/centos-7.3"
    #node2.vm.box = "ffuenf/ubuntu-17.10-server-amd64"
    #node2.vm.hostname = "#{ENV['USER']}-node2"
    node2.vm.hostname = "node2"
    node2.vm.network "private_network", ip: "10.10.0.12"
  end

  config.vm.define :node3 do |node3|    
    node3.vm.provider "virtualbox" do |v|
        file_to_disk = './tmp/large_disk.vdi'
        v.memory = 1024
        v.cpus = 1
        v.gui=true
        v.customize ['modifyvm', :id, '--nicpromisc1', 'allow-all', '--nicpromisc2', 'allow-all', '--nicpromisc3', 'allow-all']
        #v.customize ["modifyhd", "disk id", "--resize", 60 * 1024]
    end
    node3.vm.box="bento/centos-7.3"
#    node3.vm.box = "ffuenf/ubuntu-17.10-server-amd64"
    node3.vm.hostname = "node3"
    #node3.vm.hostname = "#{ENV['USER']}-node3"
    node3.vm.network "private_network", ip: "10.10.0.13"
  end


  
  config.vm.define :master do |master|    
    master.vm.provider "virtualbox" do |v|
        file_to_disk = './tmp/large_disk.vdi'
        v.memory = 1024
        v.cpus = 1
        v.gui=true
        v.customize ['modifyvm', :id, '--nicpromisc1', 'allow-all', '--nicpromisc2', 'allow-all', '--nicpromisc3', 'allow-all']
        #v.customize ["modifyhd", "disk id", "--resize", 60 * 1024]
    end
    master.vm.box="bento/centos-7.3"
    #master.vm.box = "ffuenf/ubuntu-17.10-server-amd64"
    #master.vm.hostname = "#{ENV['USER']}-master"
    master.vm.hostname = "kubemaster"
  #master.vm.network "public_network", bridge: "eth0"
  #master.vm.box_url = "http://cloud.centos.org/centos/7/vagrant/x86_64/images/CentOS-7-x86_64-Vagrant-1710_01.VirtualBox.box"
    master.vm.network "private_network", ip: "10.10.0.21"
  #master.vm.provision :shell, path: "cos7bootstrap.sh"
  #master.vm.synced_folder "#{ENV['PWD']}/logs", "/vagrant/logs"
  #master.vm.synced_folder "$HOSTNAME/logs", "/vagrant/logs"
  #master.vm.synced_folder "/Applications/VirtualBox.app/Contents/MacOS", "/vagrant/vbox"
  #master.vm.provision "file", source: "../data/trident-sensor_installer.centos-2.3.1.bin", destination: "/vagrant/trident-sensor_installer.centos-2.3.1.bin"
  #master.vm.provision :shell, path: "install_trident.sh"
  end




  
  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  #config.vm.box_url = "http://files.vagrantup.com/precise64.box"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end
